(()=>{"use strict";class e{constructor(){this.columns=10,this.rows=10,this.cells=[],this.shipCounter=0}createBoard(){for(let e=0;e<this.columns;e++){this.cells[e]=[];for(let t=0;t<this.rows;t++)this.cells[e][t]={targeted:!1,occupied:!1}}}placeShip(e,t,s,i){if(t=Boolean(t),!this.checkValidity(s)||!this.checkValidity(i))throw new Error("Invalid placement");let h=[];if(t)for(let t=0;t<e.length;t++)h.push([i,s+t]);else for(let t=0;t<e.length;t++)h.push([i+t,s]);h.forEach((e=>{if(!this.checkValidity(e[0])||!this.checkValidity(e[1]))throw new Error("Invalid placement")})),h.forEach((e=>{if(this.checkIfOccupied(e[0],e[1]))throw new Error("Cell already occupied")})),h.forEach((t=>{this.cells[t[0]][t[1]].occupied=!0,this.cells[t[0]][t[1]].ship=e})),this.shipCounter++}checkValidity(e){return!(e<0||e>this.rows||e>this.columns)}checkIfOccupied(e,t){return!0===this.cells[e][t].occupied}receiveAttack(e,t){if(!this.checkValidity(e)||!this.checkValidity(t))throw new Error("Invalid target");if(!0===this.cells[e][t].targeted)throw new Error("Cell already targeted");this.cells[e][t].targeted=!0,this.cells[e][t].ship&&(this.cells[e][t].ship.hits++,this.cells[e][t].ship.isSunk(),!0===this.cells[e][t].ship.sunk&&this.shipCounter--)}}class t{constructor(e,t){this.name=e,this.length=t,this.hits=0,this.sunk=!1}hit(){this.hits+=1}isSunk(){this.hits>=this.length&&(this.sunk=!0)}}const s=new class{constructor(){this.gameBoard=new e,this.gameBoard.createBoard(),this.carrier=new t("carrier",5),this.battleship=new t("battleship",4),this.cruiser=new t("cruiser",3),this.submarine=new t("submarine",3),this.destroyer=new t("destroyer",2)}checkForDefeat(){return 0===this.gameBoard.shipCounter}};s.gameBoard.placeShip(s.cruiser,!0,2,2),s.gameBoard.placeShip(s.battleship,!1,5,5),s.gameBoard.receiveAttack(2,3),console.table(s.gameBoard.cells)})();
//# sourceMappingURL=main.js.map