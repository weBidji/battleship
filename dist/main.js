(()=>{"use strict";class t{constructor(t,e){this.name=t,this.length=e,this.hits=0,this.sunk=!1}hit(){this.hits+=1}isSunk(){this.hits>=this.length&&(this.sunk=!0)}}const e=new class{constructor(){this.columns=10,this.rows=10,this.cells=[]}createBoard(){for(let t=0;t<this.columns;t++){this.cells[t]=[];for(let e=0;e<this.rows;e++)this.cells[t][e]={targeted:!1,occupied:!1}}}placeShip(e,i,s,c,h){i=Boolean(i);const l=new t(e,s);if(!this.checkValidity(c)||!this.checkValidity(h))throw new Error("Invalid placement");let r=[];if(i)for(let t=0;t<s;t++)r.push([h,c+t]);else for(let t=0;t<s;t++)r.push([h+t,c]);r.forEach((t=>{if(!this.checkValidity(t[0])||!this.checkValidity(t[1]))throw new Error("Invalid placement")})),r.forEach((t=>{if(this.checkIfOccupied(t[0],t[1]))throw new Error("Cell already occupied")})),r.forEach((t=>{this.cells[t[0]][t[1]].occupied=!0,this.cells[t[0]][t[1]].ship=l}))}checkValidity(t){return!(t<0||t>this.rows||t>this.columns)}checkIfOccupied(t,e){return!0===this.cells[t][e].occupied}receiveAttack(t,e){if(!this.checkValidity(t)||!this.checkValidity(e))throw new Error("Invalid target");if(!0===this.cells[t][e].targeted)throw new Error("Cell already targeted");this.cells[t][e].targeted=!0,this.cells[t][e].ship&&(this.cells[t][e].ship.hits++,this.cells[t][e].ship.isSunk())}};e.createBoard(),e.placeShip("destroyer",!0,3,2,2),e.placeShip("sloop",!1,4,5,5),e.receiveAttack(2,2),e.receiveAttack(2,3),e.receiveAttack(2,4),console.table(e.cells)})();
//# sourceMappingURL=main.js.map