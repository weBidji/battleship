(()=>{"use strict";class t{constructor(t){this.length=t,this.hits=0,this.sunk=!1}hit(){this.hits+=1}isSunk(){this.hits>=this.length&&(this.sunk=!0)}}const e=new class{constructor(){this.columns=10,this.rows=10,this.cells=[]}createBoard(){for(let t=0;t<this.columns;t++){this.cells[t]=[];for(let e=0;e<this.rows;e++)this.cells[t][e]={targeted:!1,occupied:!1}}}placeShip(e,s,i,c){if(e=Boolean(e),new t(s),!this.checkValidity(i)||!this.checkValidity(c))throw new Error("Invalid placement");let h=[];if(e)for(let t=0;t<s;t++)h.push([c,i+t]);else for(let t=0;t<s;t++)h.push([c+t,i]);h.forEach((t=>{if(!this.checkValidity(t[0])||!this.checkValidity(t[1]))throw new Error("Invalid placement")})),h.forEach((t=>{if(this.checkIfOccupied(t[0],t[1]))throw new Error(`Cell(s) already occupied (${t[0]},${t[1]})`)})),h.forEach((t=>{this.cells[t[0]][t[1]].occupied=!0}))}checkValidity(t){return!(t<0||t>this.rows||t>this.columns)}checkIfOccupied(t,e){return!0===this.cells[t][e].occupied}receiveAttack(t,e){if(t<0||t>this.rows||e<0||e>this.columns)throw new Error("Invalid coordinates");this.cells[t][e].targeted=!0}};e.createBoard(),e.placeShip(!1,3,0,0),console.table(e.cells),e.placeShip(!1,3,0,2)})();
//# sourceMappingURL=main.js.map